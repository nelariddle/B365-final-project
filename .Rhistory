TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
used <-
rep(FALSE, n_attrs)
var <- rep(0, n_attrs)
bestsse <-
rep(10000000000000, n_attrs)
for (j in 1:n_attrs)  {
for (i in which(used == FALSE)) {
used[i] <- TRUE
XX <- cbind(X[, 1] ^ 0, X[, used])
a <- solve(t(XX) %*% XX , t(XX) %*% y)
yhat <- XX %*% a
error <- y - yhat
sse <- sum(error ^ 2)
if (sse < bestsse[j]) {
bestsse[j] <- sse
var[j] <- i
}
used[i] <- FALSE
}
used[var[j]] <-
TRUE
cat("the", ordinal(j), "best attribute is", colnames(X)[j], '\n')
}
plot(bestsse,
main = "squared error vs. num attributes used",
xlab = "num attributes",
ylab = "squared error")
setwd("C:/Users/nelar/OneDrive/Documents/fall 2022/b365/Final project")
data <-
read.csv("data-with-salary-class.csv", stringsAsFactors = TRUE)
# install.packages("dplyr")
# install.packages("english")
library(dplyr)
library(english)
# add a column for percent GPA grades
data$PCT.GPA <- data$GPA.GRADES / data$TOTAL.GRADES
# dont care about career and thesis courses
data <- data %>% filter(LETTER != "Y" & LETTER != "G")
# only undergrad
data <- data %>% filter(COURSE. < 500)
# create instructor data
# TOTAL.GRADES.INSTRUCTOR is the total # of grades given by an instructor that year
# AVG.GPA INSTRUCTOR is the average GPA of grades given by an instructor that year
instructor.data <-
data %>% group_by(INSTRUCTOR.NAME, YEAR) %>% mutate(
TOTAL.INSTRUCTOR.GRADES =
sum(TOTAL.GRADES),
AVG.INSTRUCTOR.GPA =
sum(AVG.SECT.GPA *
TOTAL.GRADES) /
sum(TOTAL.GRADES)
) %>% ungroup()
# single variable analysis
library(english)
X <-
instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
sses <- rep(0, n_attrs)
for (i in 1:n_attrs) {
plot(X[, i], y, xlab = colnames(X)[i], ylab = colnames(y)[1])
d <- cbind(X[, i] ^ 0, X[, i] ^ 1)
a <- solve(t(d) %*% d, t(d) %*% y)
abline(a[1], a[2], col = "purple")
yhat <- d %*% a
error <- y - yhat
sse <- sum(error ^ 2)
sses[i] <- sse
cat(
colnames(X)[i],
"\nerror:",
round(sse, 3),
"slope:",
a[1],
"intercept:",
a[2],
"\n"
)
}
i <- 1
for (attr in colnames(X)[order(sses)]) {
cat(ordinal(i), "best: ", attr, "\n")
i = i + 1
}
# variable selection
X <- instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
used <-
rep(FALSE, n_attrs)
var <- rep(0, n_attrs)
bestsse <-
rep(10000000000000, n_attrs)
for (j in 1:n_attrs)  {
for (i in which(used == FALSE)) {
used[i] <- TRUE
XX <- cbind(X[, 1] ^ 0, X[, used])
a <- solve(t(XX) %*% XX , t(XX) %*% y)
yhat <- XX %*% a
error <- y - yhat
sse <- sum(error ^ 2)
if (sse < bestsse[j]) {
bestsse[j] <- sse
var[j] <- i
}
used[i] <- FALSE
}
used[var[j]] <-
TRUE
cat("the", ordinal(j), "best attribute is", colnames(X)[j], '\n')
}
plot(bestsse,
main = "squared error vs. num attributes used",
xlab = "num attributes",
ylab = "squared error")
?abline
setwd("C:/Users/nelar/OneDrive/Documents/fall 2022/b365/Final project")
data <-
read.csv("data-with-salary-class.csv", stringsAsFactors = TRUE)
# install.packages("dplyr")
# install.packages("english")
library(dplyr)
library(english)
# add a column for percent GPA grades
data$PCT.GPA <- data$GPA.GRADES / data$TOTAL.GRADES
# dont care about career and thesis courses
data <- data %>% filter(LETTER != "Y" & LETTER != "G")
# only undergrad
data <- data %>% filter(COURSE. < 500)
# create instructor data
# TOTAL.GRADES.INSTRUCTOR is the total # of grades given by an instructor that year
# AVG.GPA INSTRUCTOR is the average GPA of grades given by an instructor that year
instructor.data <-
data %>% group_by(INSTRUCTOR.NAME, YEAR) %>% mutate(
TOTAL.INSTRUCTOR.GRADES =
sum(TOTAL.GRADES),
AVG.INSTRUCTOR.GPA =
sum(AVG.SECT.GPA *
TOTAL.GRADES) /
sum(TOTAL.GRADES)
) %>% ungroup()
# single variable analysis
library(english)
X <-
instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
sses <- rep(0, n_attrs)
for (i in 1:n_attrs) {
plot(X[, i], y, xlab = colnames(X)[i], ylab = colnames(y)[1])
d <- cbind(X[, i] ^ 0, X[, i] ^ 1)
a <- solve(t(d) %*% d, t(d) %*% y)
abline(a[1], a[2], col = "purple")
yhat <- d %*% a
error <- y - yhat
sse <- sum(error ^ 2)
sses[i] <- sse
cat(
colnames(X)[i],
"\nerror:",
round(sse, 3),
"intercept:",
a[1],
"slope:",
a[2],
"\n"
)
}
i <- 1
for (attr in colnames(X)[order(sses)]) {
cat(ordinal(i), "best: ", attr, "\n")
i = i + 1
}
# variable selection
X <- instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
used <-
rep(FALSE, n_attrs)
var <- rep(0, n_attrs)
bestsse <-
rep(10000000000000, n_attrs)
for (j in 1:n_attrs)  {
for (i in which(used == FALSE)) {
used[i] <- TRUE
XX <- cbind(X[, 1] ^ 0, X[, used])
a <- solve(t(XX) %*% XX , t(XX) %*% y)
yhat <- XX %*% a
error <- y - yhat
sse <- sum(error ^ 2)
if (sse < bestsse[j]) {
bestsse[j] <- sse
var[j] <- i
}
used[i] <- FALSE
}
used[var[j]] <-
TRUE
cat("the", ordinal(j), "best attribute is", colnames(X)[j], '\n')
}
plot(bestsse,
main = "squared error vs. num attributes used",
xlab = "num attributes",
ylab = "squared error")
attr_perf<-array(0,dim=c(4,n_attrs))
attr_perf
attr_perf<-array(0,dim=c(n_attrs,4))
attr_perf
library(english)
X <-
instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
sses <- rep(0, n_attrs)
attr_perf<-array(0,dim=c(n_attrs,4))
for (i in 1:n_attrs) {
plot(X[, i], y, xlab = colnames(X)[i], ylab = colnames(y)[1])
d <- cbind(X[, i] ^ 0, X[, i] ^ 1)
a <- solve(t(d) %*% d, t(d) %*% y)
abline(a[1], a[2], col = "purple")
yhat <- d %*% a
error <- y - yhat
sse <- sum(error ^ 2)
sses[i] <- sse
cat(
colnames(X)[i],
"\nerror:",
round(sse, 3),
"intercept:",
a[1],
"slope:",
a[2],
"\n"
)
attr_perf[i,]<-c(colnames(X)[i],round(sse, 3),a[1],a[2])
}
i <- 1
for (attr in colnames(X)[order(sses)]) {
cat(ordinal(i), "best: ", attr, "\n")
i = i + 1
}
attr_perf
attr_perf["COURSE.",]
attr_perf[6,]
source("~/fall 2022/b365/Final project/salaryLinearModels.R", echo=TRUE)
X <-
instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
sses <- rep(0, n_attrs)
attr_perf<-array(0,dim=c(n_attrs,4))
for (i in 1:n_attrs) {
plot(X[, i], y, xlab = colnames(X)[i], ylab = colnames(y)[1])
d <- cbind(X[, i] ^ 0, X[, i] ^ 1)
a <- solve(t(d) %*% d, t(d) %*% y)
abline(a[1], a[2], col = "purple")
yhat <- d %*% a
error <- y - yhat
sse <- sum(error ^ 2)
sses[i] <- sse
cat(
colnames(X)[i],
"\nerror:",
round(sse, 3),
"intercept:",
a[1],
"slope:",
a[2],
"\n"
)
attr_perf[i,]<-c(colnames(X)[i],round(sse, 3),a[1],a[2])
}
i <- 1
for (rank in order(sses)) {
cat(
attr_perf[rank,1],
"\nerror:",
attr_perf[rank,2],
"intercept:",
attr_perf[rank,3],
"slope:",
attr_perf[rank,4],
"\n"
)
# cat(ordinal(i), "best: ", attr, "\n")
# i = i + 1
}
attr_perf
for (rank in order(sses)) {
cat(
round(attr_perf[rank,1],3),
"\nerror:",
attr_perf[rank,2],
"intercept:",
attr_perf[rank,3],
"slope:",
attr_perf[rank,4],
"\n"
)
}
attr_perf[1, 1]
for (rank in order(sses)) {
cat(
attr_perf[rank,1],
"\nerror:",
round(attr_perf[rank,2],3),
"intercept:",
attr_perf[rank,3],
"slope:",
attr_perf[rank,4],
"\n"
)
}
attr_perf[1, 2]
class(attr_perf[1, 2])
as.numeric(attr_perf[1, 2])
for (rank in order(sses)) {
cat(
attr_perf[rank,1],
"\nerror:",
round(as.numeric(attr_perf[rank,2],3)),
"intercept:",
attr_perf[rank,3],
"slope:",
attr_perf[rank,4],
"\n"
)
}
i <- 1
for (rank in order(sses)) {
cat(
attr_perf[rank,1],
"\nerror:",
round(as.numeric(attr_perf[rank,2],2)),
"intercept:",
attr_perf[rank,3],
"slope:",
attr_perf[rank,4],
"\n"
)
}
for (rank in order(sses)) {
cat(
attr_perf[rank,1],
"\nerror:",
round(as.numeric(attr_perf[rank,2],3)),
"intercept:",
round(as.numeric (attr_perf[rank,3]),3),
"slope:",
attr_perf[rank,4],
"\n"
)
}
for (rank in order(sses)) {
cat(
attr_perf[rank, 1],
"\nerror:",
round(as.numeric(attr_perf[rank, 2], 3)),
"intercept:",
round(as.numeric (attr_perf[rank, 3]), 3),
"slope:",
round  (as.numeric (attr_perf[rank, 4]), 3),
"\n"
)
}
plot(bestsse,
main = "squared error vs. num attributes used",
xlab = "num attributes",
ylab = "squared error")
X <- instructor.data %>% select(
TOTAL.INSTRUCTOR.GRADES,
AVG.SECT.GPA,
YEAR,
COURSE.,
PERCENT.MAJORS,
AVG.INSTRUCTOR.GPA,
AVG.STDNT.CUM.GPA
) %>% as.matrix()
y <- instructor.data %>% select(NEWSALARY) %>% as.matrix()
n_attrs <- ncol(X)
used <-
rep(FALSE, n_attrs)
var <- rep(0, n_attrs)
bestsse <-
rep(10000000000000, n_attrs)
for (j in 1:n_attrs)  {
for (i in which(used == FALSE)) {
used[i] <- TRUE
XX <- cbind(X[, 1] ^ 0, X[, used])
a <- solve(t(XX) %*% XX , t(XX) %*% y)
yhat <- XX %*% a
error <- y - yhat
sse <- sum(error ^ 2)
if (sse < bestsse[j]) {
bestsse[j] <- sse
var[j] <- i
}
used[i] <- FALSE
}
used[var[j]] <-
TRUE
cat("the", ordinal(j), "best attribute is", colnames(X)[j], '\n')
}
plot(bestsse,
main = "squared error vs. num attributes used",
xlab = "num attributes",
ylab = "squared error")
data <- read.csv("data-with-salary-class.csv", stringsAsFactors = TRUE)
library(dplyr)
# Data cleaning from Nela
# add a column for percent GPA grades
data$PCT.GPA <- data$GPA.GRADES / data$TOTAL.GRADES
# dont care about career and thesis courses
data <- data %>% filter(LETTER != "Y" & LETTER != "G")
# only undergrad
data <- data %>% filter(COURSE. < 500)
## More Data cleaning
# Select only important columns
data = data[,c("YEAR", "COURSE.", "PERCENT.MAJORS", "NEWSALARY", "AVG.SECT.GPA")]
# Flooring the course numbers to only 1,2,3, and 4
data["COURSE."] = floor(data["COURSE."] / 100)
# Attempting simple regression using some of our identified useful variables
# Testing course number
x = data$COURSE.
y = data$NEWSALARY
n = length(x)
plot(x,y)
xbar = sum(x)/n
ybar = sum(y)/n
xybar = sum(x*y)/n
xsqbar = sum(x*x)/n
b = (ybar*xsqbar-xbar*xybar)/ (xsqbar - xbar*xbar)  # from our calculations
a = (ybar - b)/xbar
abline(b,a)
# Testing average section GPA
x = data$AVG.SECT.GPA
plot(x,y)
xbar = sum(x)/n
ybar = sum(y)/n
xybar = sum(x*y)/n
xsqbar = sum(x*x)/n
b = (ybar*xsqbar-xbar*xybar)/ (xsqbar - xbar*xbar)  # from our calculations
a = (ybar - b)/xbar
abline(b,a)
# Testing year
x = data$YEAR
plot(x,y)
xbar = sum(x)/n
ybar = sum(y)/n
xybar = sum(x*y)/n
xsqbar = sum(x*x)/n
b = (ybar*xsqbar-xbar*xybar)/ (xsqbar - xbar*xbar)  # from our calculations
a = (ybar - b)/xbar
abline(b,a)
